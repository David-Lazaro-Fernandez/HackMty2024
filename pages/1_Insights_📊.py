import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from datetime import datetime

# Funci칩n para generar datos simulados
def generate_data_for_day(selected_date):
    hours = list(range(9, 19))  # De 9:00 a 18:00
    max_retention_time = np.random.randint(10, 60, size=len(hours))  # Simular tiempos de retenci칩n entre 10 y 60 minutos
    return pd.DataFrame({
        'Hora': [f"{hour}:00" for hour in hours],
        'Tiempo M치ximo de Retenci칩n (min)': max_retention_time
    })

# P치gina de Insights
def insights_page():
    st.title("游늵 Insights de Retenci칩n en Zona A")
    
    # Seleccionar fecha
    st.write("Selecciona un d칤a en el calendario para ver los datos de retenci칩n de clientes en la Zona A.")
    selected_date = st.date_input("Selecciona una fecha", value=datetime.today())
    
    # Generar los datos para el d칤a seleccionado
    st.write(f"Datos de retenci칩n para la fecha: {selected_date.strftime('%Y-%m-%d')}")
    data = generate_data_for_day(selected_date)
    
    # Mostrar gr치fico de barras
    st.write("Gr치fico de retenci칩n de clientes por hora del d칤a:")
    
    fig, ax = plt.subplots()
    ax.bar(data['Hora'], data['Tiempo M치ximo de Retenci칩n (min)'], color='skyblue')
    ax.set_xlabel('Hora del D칤a')
    ax.set_ylabel('Tiempo M치ximo de Retenci칩n (minutos)')
    ax.set_title('Tiempo M치ximo de Retenci칩n de Clientes en Zona A')
    
    st.pyplot(fig)

# Ejecutar la p치gina de insights
insights_page()
